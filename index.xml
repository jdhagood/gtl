<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Landing Page on GTL Python</title>
    <link>https://gtlpython.click/</link>
    <description>Recent content in Landing Page on GTL Python</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://gtlpython.click/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minesweeper</title>
      <link>https://gtlpython.click/minesweeper/</link>
      <pubDate>Thu, 02 Jan 2025 19:19:33 -0600</pubDate>
      
      <guid>https://gtlpython.click/minesweeper/</guid>
      <description>Humble Beginnings Windows XP is before even my time&amp;hellip; Minesweeper is a puzzle game that came out around the 1990s as a game for personal computers. If you are not familiar with the game I invite you to Google &amp;lsquo;minesweeper&amp;rsquo; and play Google&amp;rsquo;s version of the game.
Implementing Minesweeper Your goal for this class will be to implement many of the functions required for a game of minesweeper. After you have these functions, you can then go and make your own version of the game.</description>
    </item>
    
    <item>
      <title>About Your Instructor</title>
      <link>https://gtlpython.click/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/about/</guid>
      <description>Hello world, my name is JD Hagood, and I will be your instructor for this introduction to python class! I am looking forward to meeting everyone and teaching my favorite programming language!
Where am I from? I grew up in Clinton, Mississippi, USA with my parents and older sister. I attended a local highschool until my junior year and transferred to a public math and science magnet boarding school in the northern part of the state.</description>
    </item>
    
    <item>
      <title>Audio Processing</title>
      <link>https://gtlpython.click/audioprocessing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/audioprocessing/</guid>
      <description>Introduction In this lab we will perform manipulations on audio files to produce some cool effects. Before we can start let&amp;rsquo;s talk about how sound is stored on a computer.
When you use a microphone to record a sound, it measures the electrical signal from a transducer which is proportial to the pressure at the transducer many times a second. This produces a list of numbers, called samples (both positive, zero, and negative), corresponding to the pressue at a certain time.</description>
    </item>
    
    <item>
      <title>Binary Search</title>
      <link>https://gtlpython.click/binarysearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/binarysearch/</guid>
      <description>Conditionals Because we want our python programs to be more than glorified calculators, we need a way to conditially executing code
Where did we leave the keys? Last summer my friends and I had a rented a Christler Pacifica that we endearingly named &amp;ldquo;Chrissy&amp;rdquo;.
Chrissy! One day we realized that we lost Chrissy&amp;rsquo;s keys. We were fairly certain that the keys ended up in one of our bags, but there were quite a few of us with many differnt bags.</description>
    </item>
    
    <item>
      <title>Cellular Atomata</title>
      <link>https://gtlpython.click/cellular_atomata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/cellular_atomata/</guid>
      <description>An introduction to functions You have likely encountered functions in other programming languages and seen their power. In thier most basic interpertation, you can think of functions like a macro that you can copy and paste anywhere in your code to make it shorter and more readable. In the example below we make a function called &amp;lsquo;greeting&amp;rsquo; that will print &amp;lsquo;ciao&amp;rsquo; whenever it is called.
def greeting(): print(&amp;#34;Ciao&amp;#34;) greeting() This is the copy and paste functionality of functions and is rather boring.</description>
    </item>
    
    <item>
      <title>DFS</title>
      <link>https://gtlpython.click/dfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/dfs/</guid>
      <description>Sets If you have have so much as dipped your toes in higher level math, you have likely heard about sets. All of modern math is built on top of sets. In math a set is an unordered collection of objects. Sets can be constructed to hold almost anything anything from numbers to functions to cats and dogs to other sets (Russel has entered the chat).
In python we can create a set using curly braces.</description>
    </item>
    
    <item>
      <title>Enviroment Model</title>
      <link>https://gtlpython.click/enviroment_model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/enviroment_model/</guid>
      <description>The Environment Diagram When you are programming in any language, it is important to have a mental model of what you are doing. If you are blindly executing code and run into a bug, it can be nearly impossible to figure out how to fix it on your own if you are not aware of what exactly you are writing. Environment diagrams help demystify many confusing aspects of Python and shine light on why many of the things in Python are done the way they are.</description>
    </item>
    
    <item>
      <title>Generators</title>
      <link>https://gtlpython.click/generators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/generators/</guid>
      <description>Reimplementing range Suppose we wanted to reimplement python&amp;rsquo;s range function. To do so we may na√Øvely implement a function that retuns a list of numbers in our desired range like this:
def list_range(start, stop, step=1): assert step &amp;gt;= 1 out = [] current = start while current &amp;lt; stop: out.append(current) current += step return out However, let&amp;rsquo;s try to use this function in the following program.
for i in list_range(0, 1_000_000_000_000_000, 1): if i &amp;gt; 100: break print(i) You will eventually see the numbers 0-99 printed on the screen, but not after a considerable pause!</description>
    </item>
    
    <item>
      <title>hello, world</title>
      <link>https://gtlpython.click/hello_world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/hello_world/</guid>
      <description>Why Python Short intro on python and why it is used.
Downloading python Before we can jump into programming, everyone needs to download python. Download the latest version for your operating system from python.org (3.13.1 when I wrote this).
If you have a Windows machine and want to work with python in the system terminal, you should add python to your PATH variable. This just makes sure you can call the python.</description>
    </item>
    
    <item>
      <title>Recursion</title>
      <link>https://gtlpython.click/recursion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/recursion/</guid>
      <description>Recursion is one of the most useful tools that a programmer can have in their toolbelt. It can lead to very elegant solutions to problems that seem large or complicated at first by breaking it down into smaller pieces that can be more easily computed. Once you get the hang of it, you will also likely agree that the recursive programs are easier to understand. Let&amp;rsquo;s learn how to harness this power in python.</description>
    </item>
    
    <item>
      <title>sketchpad</title>
      <link>https://gtlpython.click/sketchpad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gtlpython.click/sketchpad/</guid>
      <description>Hello, my name is JD, and I will be your instructor for this introduction to python class! I am looking forward to meeting everyone and teaching my favorite programming language: python.
Where am I from? I grew up in Clinton, Mississippi USA.
Download here: Download the ZIP file $$\int^\infty_0 e^{-x^2}dx = \frac{\sqrt{\pi}}{2}$$ The formula for the Gaussian integral is \( \int^\infty_0 e^{-x^2}dx = \frac{\sqrt{\pi}}{2} \). $$ \begin{array}{|c|c|c|} \hline \text{Header 1} &amp; \text{Header 2} &amp; \text{Header 3} \\ \hline \text{Data 1} &amp; \text{Data 2} &amp; \text{Data 3} \\ \text{Data 4} &amp; \text{Data 5} &amp; \text{Data 6} \\ \hline \end{array} $$ print(&amp;#34;Hello World&amp;#34;) for i in range(10): print(f&amp;#34;num = {i}&amp;#34;) Change of config file detected, rebuilding site (#35).</description>
    </item>
    
  </channel>
</rss>
